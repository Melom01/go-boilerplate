// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/Melom01/go-boilerplate/pkg/api"
	"github.com/Melom01/go-boilerplate/pkg/api/handler"
	"github.com/Melom01/go-boilerplate/pkg/config"
	"github.com/Melom01/go-boilerplate/pkg/db"
	"github.com/Melom01/go-boilerplate/pkg/repository"
	"github.com/Melom01/go-boilerplate/pkg/usecase"
)

// Injectors from wire.go:

func InitializeAppDependencies(cfg config.Configuration) (*api.ServerHttp, error) {
	firebaseService, err := config.CreateFirebaseService(cfg)
	if err != nil {
		return nil, err
	}
	gormDB, err := db.ConnectDatabase(cfg)
	if err != nil {
		return nil, err
	}
	bookRepositoryInterface := repository.CreateBookRepository(gormDB)
	bookUseCaseInterface := usecase.CreateBookUseCase(bookRepositoryInterface)
	bookHandler := handler.CreateBookHandler(bookUseCaseInterface)
	serverHttp := api.CreateServerHttp(firebaseService, bookHandler)
	return serverHttp, nil
}
